/** @format */

const express = require("express");
const mongoose = require("mongoose");
const Blog = require("./models/blog"); // requiring the models file

// start express app
const app = express();

// connect to mongodb
const dbURI =
  "mongodb+srv://xolani:njabs12345@nodetuts.qk2xo.mongodb.net/node-tuts?retryWrites=true&w=majority";
mongoose
  .connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then((result) => app.listen(5001))
  .catch((err) => console.log(err));

app.set("view engine", "ejs"); // to set the view engine to render ejs documents instead of html

// Middleware and static files
app.use(express.static("public"));

// mongoose and mongo sandbox routes.............................................................................................................................................................
app.get("/add-blog", (req, res) => {
  const blog = new Blog({
    title: "I wrote this 2",
    snippet: "I want to see what will be outputed.......................",
    body: "okay I see LOL",
  });

  blog
    .save()
    .then((result) => {
      res.send(result);
    })
    .catch((err) => console.log(err));
});

app.get("/all-blogs", (req, res) => {
  // method pre built into mongoose to display everything in that collection
  // when you use the find() method, you use it straight on the Blog and not on the instance of the blog.
  // Hence the Blog.find() is in a capital letter
  Blog.find()
    .then((result) => res.send(result))
    .catch((err) => console.log(err));
});

app.get('/single-blog', (req, res) => {
  Blog.findById("60104e863347bc350a36aa59")
    .then(result => res.send(result))
    .catch(err => console.log(err))
})

//...........................................................................................................................................................................................................

app.get("/", (req, res) => {
 res.redirect('/blogs')
});

app.get("/about", (req, res) => {
  res.render("about.ejs", { title: "About us" });
});

app.get("/blogs/create", (req, res) => {
  res.render("create.ejs", { title: "create blog" });
});

app.get('/blogs', (req, res) => {
  Blog.find().sort({ createdAt: -1 }) // createdAt comes from the timestamps generated by mogoose
    .then(result => res.render("index.ejs", { title: 'All Xolani\'s blogs', blogs: result }))
    .catch(err => console.log(err))
})

app.use((req, res) => {
  res.status(404).sendFile(__dirname + "/views/404.html");
});
